diff --git a/src/DefaultBtInteractive.cc b/src/DefaultBtInteractive.cc
index da68aa95..d18e7f51 100644
--- a/src/DefaultBtInteractive.cc
+++ b/src/DefaultBtInteractive.cc
@@ -36,6 +36,7 @@
 
 #include <cstring>
 #include <vector>
+#include <regex>
 
 #include "prefs.h"
 #include "message.h"
@@ -528,6 +529,21 @@ void DefaultBtInteractive::addPeerExchangeMessage()
   }
 }
 
+static bool is_bad_peer(Peer *peer)
+{
+  std::regex id_filter("-(XL|SD|XF|QD|BN|DL)(\\d+)-");
+  std::regex ua_filter(R"((\d+.\d+.\d+.\d+|cacao_torrent))");
+  std::regex player_filter("-(UW\\w{4})-");
+  const char *peer_name = reinterpret_cast<const char *>(peer->getPeerId());
+  if (std::regex_match(peer_name, peer_name + 8, id_filter)) {
+    return true;
+  }
+  if (std::regex_match(peer_name, peer_name + 8, player_filter)) {
+    return true;
+  }
+  return false;
+}
+
 void DefaultBtInteractive::doInteractionProcessing()
 {
   if (metadataGetMode_) {
@@ -568,6 +584,18 @@ void DefaultBtInteractive::doInteractionProcessing()
       dispatcher_->checkRequestSlotAndDoNecessaryThing();
     }
     numReceivedMessage_ = receiveMessages();
+
+    if(is_bad_peer(peer_.get()))
+    {
+      throw DL_ABORT_EX(fmt("Drop bad leecher peer: peer_id=%s ipaddr=%s port=%d",
+        util::percentEncode(peer_->getPeerId(), 20).c_str(),
+        peer_->getIPAddress().c_str(),
+        peer_->getPort()));
+    }
+    A2_LOG_DEBUG(fmt("GC: peer_id=%s ipaddr=%s port=%d",
+      util::percentEncode(peer_->getPeerId(), 20).c_str(),
+      peer_->getIPAddress().c_str(),
+      peer_->getPort()));
     detectMessageFlooding();
     decideChoking();
     decideInterest();
